$breakpoints: (
  sm: 30rem, // 480px
  md: 48rem, // 768px
  lg: 64rem, // 1024xx
  xl: 75rem, // 1200px
);

$spacingUnit: 0.25rem; // 4px

$spacing: (
  x1: $spacingUnit,       // 0.25rem/4px
  x2: $spacingUnit * 2,   // 0.5rem/8px
  x3: $spacingUnit * 3,   // 0.5rem/12px
  x4: $spacingUnit * 4,   // 1rem/16px
  x6: $spacingUnit * 6,   // 1.5rem/24px
  x8: $spacingUnit * 8,   // 2rem/32px
  x10: $spacingUnit * 10, // 2rem/40px
  x12: $spacingUnit * 12, // 2rem/48px
);

@function miseSpacing($multiplier) {
  @return map-get($spacing, $multiplier);
}

$content: (
  maxWidth: 1200px,
  gutter: (
    base: miseSpacing(x1),
    bpXs: miseSpacing(x1),
    bpSm: miseSpacing(x1),
    bpMd: miseSpacing(x4), 
    bpLg: miseSpacing(x8),
    bpXl: miseSpacing(x8),
  ),
);

$grid: (
  column: (
    full: 100%,
    threeQuarters: 75%,
    twoThirds: 66.666%,
    half: 50%,
    third: 33.333%,
    quarter: 25%,
  ),
  gap: (
    base: miseSpacing(x1),
    bpXs: miseSpacing(x1),
    bpSm: miseSpacing(x1),
    bpMd: miseSpacing(x4), 
    bpLg: miseSpacing(x4),
    bpXl: miseSpacing(x4),
  )
);

// Exports
// This allows variables to be used with ./src/components/tokens/layout/Layout.ts
:export {
  // Breakpoints
  @each $breakpoint, $value in $breakpoints {
    breakpoint-#{$breakpoint}: $value;
  }
  // Spacing Unit
  spacingUnit: $spacingUnit;
  // Spacing
  @each $multiplier, $value in $spacing {
    spacing-#{$multiplier}: $value;
  }
  // Content
  @each $prop, $value in $content {
    @if type-of($value) == map {
      @each $option, $value in $value {
        content-#{$prop}-#{$option}: $value;
      }
    } @else {
      content-#{$prop}: $value;
    }
  }
  // Grid
  @each $prop, $value in $grid {
    @each $option, $value in $value {
      grid-#{$prop}-#{$option}: $value;
    }
  }
}
